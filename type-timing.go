package ga

//WARNING: This file was generated. Do not edit.

import "net/url"

//Timing Hit Type
type Timing struct {
	// Specifies the user timing category.
	UserTimingCategory string 	//@TODO string
	// Specifies the user timing variable.
	UserTimingVariableName string 	//@TODO string
	// Specifies the user timing value. The value is in milliseconds.
	UserTimingTime string 	//@TODO int64
	// Specifies the user timing label.
	UserTimingLabel string 	//@TODO string
	// Specifies the time it took for a page to load. The value
	// is in milliseconds.
	PageLoadTime string 	//@TODO int64
	// Specifies the time it took to do a DNS lookup.The value
	// is in milliseconds.
	DNSTime string 	//@TODO int64
	// Specifies the time it took for the page to be downloaded.
	// The value is in milliseconds.
	PageDownloadTime string 	//@TODO int64
	// Specifies the time it took for any redirects to happen.
	// The value is in milliseconds.
	RedirectResponseTime string 	//@TODO int64
	// Specifies the time it took for a TCP connection to be made.
	// The value is in milliseconds.
	TCPConnectTime string 	//@TODO int64
	// Specifies the time it took for the server to respond after
	// the connect time. The value is in milliseconds.
	ServerResponseTime string 	//@TODO int64
	// Specifies the time it took for Document.readyState to be
	// 'interactive'. The value is in milliseconds.
	DOMInteractiveTime string 	//@TODO int64
	// Specifies the time it took for the DOMContentLoaded Event
	// to fire. The value is in milliseconds.
	ContentLoadTime string 	//@TODO int64
}

func (h *Timing) addFields(v url.Values) error {
	if h.UserTimingCategory != "" {
		v.Add("utc", h.UserTimingCategory)
	}
	if h.UserTimingVariableName != "" {
		v.Add("utv", h.UserTimingVariableName)
	}
	if h.UserTimingTime != "" {
		v.Add("utt", h.UserTimingTime)
	}
	if h.UserTimingLabel != "" {
		v.Add("utl", h.UserTimingLabel)
	}
	if h.PageLoadTime != "" {
		v.Add("plt", h.PageLoadTime)
	}
	if h.DNSTime != "" {
		v.Add("dns", h.DNSTime)
	}
	if h.PageDownloadTime != "" {
		v.Add("pdt", h.PageDownloadTime)
	}
	if h.RedirectResponseTime != "" {
		v.Add("rrt", h.RedirectResponseTime)
	}
	if h.TCPConnectTime != "" {
		v.Add("tcp", h.TCPConnectTime)
	}
	if h.ServerResponseTime != "" {
		v.Add("srt", h.ServerResponseTime)
	}
	if h.DOMInteractiveTime != "" {
		v.Add("dit", h.DOMInteractiveTime)
	}
	if h.ContentLoadTime != "" {
		v.Add("clt", h.ContentLoadTime)
	}
	return nil
}